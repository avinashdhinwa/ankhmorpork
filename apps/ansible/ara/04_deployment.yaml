---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: ara
  name: ara
  namespace: ansible
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ara
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ara
    spec:
      initContainers:
      - name: ara-migrations
        image: quay.io/paulfantom/ara
        args: ['migrate']
        volumeMounts:
          - mountPath: /root/.ara/server
            name: database
      containers:
      - env:
        - name: ARA_ALLOWED_HOSTS
          value: "['192.168.2.25', 'ara.ankhmorpork.thaum.xyz', 'health.ara.local', 'ara.ansible.svc', 'ara.ansible.svc.cluster.local']"
        image: quay.io/paulfantom/ara
        imagePullPolicy: Always
        name: ara
        ports:
          - containerPort: 8000
            name: http-ara
        readinessProbe:
          httpGet:
            path: /api/v1/
            port: http-ara
            httpHeaders:
            - name: Host
              value: "health.ara.local"
            - name: X-Health
              value: "Kubernetes-Health"
          initialDelaySeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /api/v1/
            port: http-ara
            httpHeaders:
            - name: Host
              value: "health.ara.local"
            - name: X-Health
              value: "Kubernetes-Health"
          initialDelaySeconds: 20
          failureThreshold: 5
          timeoutSeconds: 10
        volumeMounts:
          - mountPath: /root/.ara/server
            name: database
        resources:
          requests:
            memory: 90Mi
      restartPolicy: Always
      volumes:
        - name: database
          persistentVolumeClaim:
            claimName: ara-database
