---
apiVersion: upgrade.cattle.io/v1
kind: Plan
metadata:
  name: k3s-server
  namespace: system-upgrade
  labels:
    k3s-upgrade: server
spec:
  concurrency: 1
  version: v1.19.4+k3s1
  nodeSelector:
    matchExpressions:
      - {key: plan.upgrade.cattle.io/k3s, operator: Exists}
      - {key: plan.upgrade.cattle.io/k3s, operator: NotIn, values: ["disabled", "false"]}
      - {key: kubernetes.io/hostname, operator: Exists}
      - {key: node-role.kubernetes.io/master, operator: In, values: ["true"]}
  tolerations:
    - key: node-role.kubernetes.io/master
      operator: Equal
      value: "true"

  serviceAccountName: system-upgrade
  cordon: true
#  drain:
#    force: true
  upgrade:
    image: rancher/k3s-upgrade
---
apiVersion: upgrade.cattle.io/v1
kind: Plan
metadata:
  name: k3s-agent
  namespace: system-upgrade
  labels:
    k3s-upgrade: agent
spec:
  concurrency: 1 # in general, this should be the number of workers - 1
  version: v1.19.4+k3s1
  nodeSelector:
    matchExpressions:
      - {key: plan.upgrade.cattle.io/k3s, operator: Exists}
      - {key: plan.upgrade.cattle.io/k3s, operator: NotIn, values: ["disabled", "false"]}
      - {key: kubernetes.io/hostname, operator: Exists}
      - {key: node-role.kubernetes.io/master, operator: NotIn, values: ["true"]}
  serviceAccountName: system-upgrade
  prepare:
    image: rancher/k3s-upgrade
    args: ["prepare", "k3s-server"]
  drain:
    force: true
    ignoreDaemonSets: true
    skipWaitForDeleteTimeout: 60 # set this to prevent upgrades from hanging on small clusters since k8s v1.18
  upgrade:
    image: rancher/k3s-upgrade
