---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  labels:
    prometheus: k8s
    app.kubernetes.io/version: 2.24.0
    app.kubernetes.io/name: prometheus
  name: k8s
  namespace: monitoring
spec:
  additionalScrapeConfigs:
    name: scrapeconfigs
    key: additional.yaml
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: prometheus
              operator: In
              values:
              - k8s
          namespaces:
          - monitoring
          topologyKey: kubernetes.io/hostname
        weight: 100
  alerting:
    alertmanagers:
    - name: alertmanager-main
      namespace: monitoring
      port: web
  externalUrl: https://prometheus.ankhmorpork.thaum.xyz
  image: quay.io/prometheus/prometheus:v2.24.0
  nodeSelector:
    kubernetes.io/os: linux
    kubernetes.io/arch: amd64
    storage.infra/replicated: "true"
  podMonitorNamespaceSelector: {}
  podMonitorSelector: {}
  probeNamespaceSelector: {}
  probeSelector: {}
  podMetadata:
    labels:
      app.kubernetes.io/name: "prometheus"
  replicas: 2
  retention: 7d
  resources:
    requests:
      cpu: 140m
      memory: 1900Mi
  ruleNamespaceSelector: {}
  ruleSelector: {}
  # TODO: Figure out why longhorn doesn't like those and why PV needs manual chmod.
  # securityContext:
  #   fsGroup: 2000
  #   runAsNonRoot: true
  #   runAsUser: 1000
  #   RunAsGroup: 2000
  serviceAccountName: prometheus-k8s
  serviceMonitorNamespaceSelector: {}
  serviceMonitorSelector: {}
  storage:
    volumeClaimTemplate:
      metadata:
        name: promdata
      spec:
        storageClassName: "local-path"  # For performance reasons use local disk
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 40Gi
